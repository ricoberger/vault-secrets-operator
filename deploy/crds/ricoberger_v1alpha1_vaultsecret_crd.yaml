apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vaultsecrets.ricoberger.de
spec:
  group: ricoberger.de
  names:
    kind: VaultSecret
    listKind: VaultSecretList
    plural: vaultsecrets
    singular: vaultsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            keys:
              description: Keys is an array of Keys, which should be included in the
                Kubernetes secret. If the Keys field is ommitted all keys from the
                Vault secret will be included in the Kubernetes secret.
              items:
                type: string
              type: array
            path:
              description: Path is the path of the corresponding secret in Vault.
              type: string
            secretEngine:
              description: SecretEngine specifies the type of the Vault secret engine
                in which the secret is stored. Currently the 'KV Secrets Engine -
                Version 1' and 'KV Secrets Engine - Version 2' are supported. The
                value must be 'kv'. If the value is omitted or an other values is
                used the Vault Secrets Operator will try to use the KV secret engine.
              type: string
            type:
              description: Type is the type of the Kubernetes secret, which will be
                created by the Vault Secrets Operator.
              type: string
            version:
              description: Version sets the version of the secret which should be
                used. The version is only used if the KVv2 secret engine is used.
                If the version is omitted the Operator uses the latest version of
                the secret. If the version omitted and the VAULT_RECONCILIATION_TIME
                environment variable is set, the Kubernetes secret will be updated
                if the Vault secret changes.
              format: int64
              type: integer
            binary:
              description: binary is a flag to indicates if data stored in vault is 
                binary data. Since vault does not store binary data natively. 
                the binary data need to get base64 encoded before stored in vault. 
                This flag will skip the base64 encode which is needed for string data 
                to avoid the double encode problem.
              type: boolean
          required:
          - path
          - type
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
